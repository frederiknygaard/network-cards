{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","components/Bookings/BookingList/BookingList.js","pages/Bookings.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","logout","AuthPage","props","state","isLogin","swichModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailElm","current","value","password","passwordElm","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","response","status","Error","json","console","log","data","context","catch","err","createRef","className","onSubmit","this","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","modal","title","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","key","price","Date","date","toLocaleDateString","authUserId","creatorId","onDetail","bind","eventList","events","map","creator","_id","onViewDetail","EventPage","creating","isLoading","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElm","priceElm","dateElm","description","descriptionElm","updatedEvents","push","createEvent","modalCancelHandler","bookEventHandler","showDetailHandler","eventId","find","fetchEvents","Fragment","rows","bookingList","bookings","booking","createdAt","BookingsPage","bookingId","variables","filter","fetchBookings","mainNavigation","Consumer","to","App","Provider","exact","from","path","component","BookingPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31190973.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: (login) => {},\r\n    logout: () => {}\r\n});","import React, { Component } from 'react';\r\n\r\nimport './Auth.css';\r\nimport AuthContext from './../context/auth-context';\r\n\r\nclass AuthPage extends Component {\r\n\r\n  state = {\r\n    isLogin: true\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.emailElm = React.createRef();\r\n    this.passwordElm = React.createRef();\r\n  }\r\n\r\n  swichModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return {isLogin: !prevState.isLogin}\r\n    });\r\n  }\r\n  \r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const email = this.emailElm.current.value;\r\n    const password = this.passwordElm.current.value;\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query {\r\n          login(email: \"${email}\", password: \"${password}\") {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    if (!this.state.isLogin) {\r\n      requestBody = {\r\n        query: `\r\n          mutation {\r\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        `\r\n      };\r\n    }\r\n\r\n    fetch('/.netlify/functions/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error('Failed');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      console.log(response);\r\n      if (response.data.login.token) {\r\n        this.context.login(response.data.login)\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <form className=\"o-form\" onSubmit={this.submitHandler}>\r\n          <div className=\"o-form__control\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" ref={this.emailElm} />\r\n          </div>\r\n          <div className=\"o-form__control\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" ref={this.passwordElm} />\r\n          </div>\r\n          <div className=\"o-form__actions\">\r\n            <button type=\"submit\">Submit</button>\r\n            <button type=\"button\" onClick={this.swichModeHandler}>Switch to {this.state.isLogin ? 'Signup' : 'Login'}</button>\r\n          </div>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from 'react';\r\nimport './Modal.css';\r\n\r\nconst modal = props => (\r\n    <div className=\"modal\">\r\n        <header className=\"modal__header\">\r\n            <h1>{props.title}</h1>\r\n        </header>\r\n        <section className=\"modal__content\">\r\n            {props.children}\r\n        </section>\r\n        <section className=\"modal__actions\">\r\n            {props.canCancel && <button onClick={props.onCancel} className=\"button\">Cancel</button>}\r\n            {props.canConfirm && <button onClick={props.onConfirm} className=\"button\">{props.confirmText}</button>}\r\n        </section>\r\n    </div>\r\n)\r\n\r\nexport default modal;\r\n","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => <div className=\"backdrop\"></div>;\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport './EventItem.css';\r\n\r\nconst eventItem = props => (\r\n    <div className=\"events-list__item\">\r\n        <div key={props.id}>\r\n            <h1>{props.title}</h1>\r\n            <h2>{props.price} - {new Date(props.date).toLocaleDateString()}</h2>\r\n        </div>\r\n        <div>\r\n            {props.authUserId !== props.creatorId &&\r\n            <button onClick={props.onDetail.bind(this, props.id)} className=\"button\">View Details</button>\r\n            }\r\n            {props.authUserId === props.creatorId &&\r\n            <p>You're the owner of this event</p>\r\n            }\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default eventItem;","import React from 'react';\r\n\r\nimport EventItem from './EventItem/EventItem';\r\n\r\nimport './EventList.css'\r\n\r\nconst eventList = props => {\r\n    const events = props.events.map(event => {\r\n        return (\r\n            <EventItem \r\n            authUserId={props.authUserId}\r\n            creatorId={event.creator._id}\r\n            key={event._id}\r\n            id={event._id}\r\n            title={event.title}\r\n            price={event.price}\r\n            date={event.date}\r\n            onDetail={props.onViewDetail}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"events-list\">\r\n            {events}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default eventList;","import React, { Component } from 'react';\r\nimport Modal from '../components/Modal/Modal';\r\nimport Backdrop from '../components/Backdrop/Backdrop';\r\nimport AuthContext from '../context/auth-context';\r\nimport EventList from '../components/Events/EventList/EventList';\r\nimport './Events.css';\r\n\r\nclass EventPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    events: [],\r\n    isLoading: false,\r\n    selectedEvent: null\r\n  };\r\n\r\n  isActive = true;\r\n\r\n  static contextType = AuthContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.titleElm = React.createRef();\r\n    this.priceElm = React.createRef();\r\n    this.dateElm = React.createRef();\r\n    this.descriptionElm = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents();\r\n  }\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({creating: true});\r\n  }\r\n\r\n  modalConfirmHandler = () => {\r\n    this.setState({creating: false});\r\n\r\n    const title = this.titleElm.current.value;\r\n    const price = +this.priceElm.current.value;\r\n    const date = this.dateElm.current.value;\r\n    const description = this.descriptionElm.current.value;\r\n\r\n    if (title.trim().length === 0 || price <= 0 || date.trim().length === 0 || description.trim().length === 0) {\r\n      return;\r\n    };\r\n\r\n    const requestBody = {\r\n      query: `\r\n        mutation {\r\n          createEvent(eventInput: {title: \"${title}\", price: ${price}, date: \"${date}\", description: \"${description}\"}) {\r\n            _id\r\n            title\r\n            description\r\n            price\r\n            date\r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    }).then(response => {\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error('Failed');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      this.setState(prevState => {\r\n        const updatedEvents = [...prevState.events];\r\n        \r\n        updatedEvents.push({\r\n          ...response.data.createEvent,\r\n          creator: {\r\n            _id: this.context.userId\r\n          }\r\n        });\r\n\r\n        return {\r\n          events: updatedEvents\r\n        }\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  };\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({\r\n      creating: false,\r\n      selectedEvent: null\r\n    });\r\n  };\r\n\r\n  fetchEvents() {\r\n\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          events {\r\n            _id\r\n            title\r\n            description\r\n            date\r\n            price\r\n            creator {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).then(response => {\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error('Failed');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      const events = response.data.events;\r\n      if (this.isActive) {\r\n        this.setState({\r\n          events: events,\r\n          isLoading: false\r\n        })\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      if (this.isActive) {\r\n        this.setState({\r\n          isLoading: false\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  bookEventHandler = () => {\r\n    if (!this.context.token) {\r\n      this.setState({\r\n        selectedEvent: null\r\n      });\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n        mutation {\r\n          bookEvent(eventId: \"${this.state.selectedEvent._id}\") {\r\n            _id\r\n            createdAt\r\n            updatedAt\r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    }).then(response => {\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error('Failed');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      this.setState({\r\n        selectedEvent: null\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  showDetailHandler = eventId => {\r\n    console.log(eventId)\r\n    this.setState(prevState => {\r\n      const selectedEvent = prevState.events.find(event => event._id === eventId);\r\n      return {selectedEvent: selectedEvent}\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop/>}\r\n        {this.state.creating && \r\n        <React.Fragment>\r\n          <Modal title=\"Add Event\" confirmText=\"Confirm\" canCancel canConfirm onCancel={this.modalCancelHandler} onConfirm={this.modalConfirmHandler}>\r\n            <form className=\"o-form\">\r\n              <div className=\"o-form__control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleElm}></input>\r\n              </div>\r\n              <div className=\"o-form__control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceElm}></input>\r\n              </div>\r\n              <div className=\"o-form__control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElm}></input>\r\n              </div>\r\n              <div className=\"o-form__control\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea id=\"description\" rows=\"4\" ref={this.descriptionElm}></textarea>\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        </React.Fragment>\r\n        }\r\n        {this.context.token &&\r\n        <div className=\"events-control\">\r\n          <p>Share your own events</p>\r\n          <button onClick={this.startCreateEventHandler} className=\"button\">Create Event</button>\r\n        </div>\r\n        }\r\n        {this.state.isLoading ? (\r\n          <p>Loading...</p> \r\n        ) : (\r\n        <EventList \r\n          events={this.state.events}\r\n          authUserId={this.context.userId}\r\n          onViewDetail={this.showDetailHandler}\r\n        />\r\n        )}\r\n        {this.state.selectedEvent &&\r\n        <Modal\r\n          title={this.state.selectedEvent.title} \r\n          canCancel canConfirm \r\n          onCancel={this.modalCancelHandler}\r\n          onConfirm={this.bookEventHandler}\r\n          confirmText={this.context.token ? 'Book' : 'Confirm'}>\r\n            \r\n          <h1>{this.state.selectedEvent.title}</h1>\r\n          <h2>{this.state.selectedEvent.price} - {new Date(this.state.selectedEvent.date).toLocaleDateString()}</h2>\r\n          <p>{this.state.selectedEvent.description}</p>\r\n          \r\n        </Modal>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventPage;\r\n","import React from 'react';\r\n\r\nimport './BookingList.css';\r\n\r\nconst bookingList = props => (\r\n    <ul className=\"bookings\">\r\n        {props.bookings.map(booking => (\r\n            <li key={booking._id} className=\"bookings__item\">\r\n                <div>\r\n                    <h1>{booking.event.title}</h1>\r\n                    <p>{new Date(booking.createdAt).toLocaleDateString()}</p>\r\n                </div>\r\n                <div>\r\n                    <button onClick={props.onCancel.bind(this, booking._id)} className=\"button\">Cancel</button>\r\n                </div>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default bookingList;","import React, { Component } from 'react';\r\nimport AuthContext from '../context/auth-context';\r\n\r\nimport BookingList from '../components/Bookings/BookingList/BookingList';\r\n\r\nclass BookingsPage extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    bookings: []\r\n  }\r\n\r\n  static contextType = AuthContext;\r\n\r\n  componentDidMount() {\r\n    this.fetchBookings();\r\n  }\r\n\r\n  fetchBookings() {\r\n    this.setState({ isLoading: true })\r\n\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          bookings {\r\n            _id\r\n            createdAt\r\n            event {\r\n              _id\r\n              title\r\n              date\r\n            }\r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${this.context.token}`\r\n      }\r\n    }).then(response => {\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error('Failed');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      const bookings = response.data.bookings;\r\n      this.setState({\r\n        bookings: bookings,\r\n        isLoading: false\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      this.setState({\r\n        isLoading: false\r\n      })\r\n    })\r\n  }\r\n\r\n  onCancel = bookingId => {\r\n\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n\r\n    const requestBody = {\r\n      query: `\r\n        mutation CancelBooking($id: ID!) {\r\n          cancelBooking(bookingId: $id ) {\r\n            _id\r\n            title\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        id: bookingId\r\n      }\r\n    }\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${this.context.token}`\r\n      }\r\n    }).then(response => {\r\n      if (response.status !== 200 && response.status !== 201) {\r\n        throw new Error('Failed');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(response => {\r\n\r\n      this.setState(prevState => {\r\n\r\n        const updatedBookings = prevState.bookings.filter(booking => {\r\n          return booking._id !== bookingId;\r\n        })\r\n\r\n        return {\r\n          bookings: updatedBookings,\r\n          isLoading: false\r\n        }\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      this.setState({\r\n        isLoading: false\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(this.state.bookings)\r\n    return (\r\n        <div>\r\n          <BookingList bookings={this.state.bookings} onCancel={this.onCancel}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookingsPage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AuthContext from './../../context/auth-context';\r\nimport './MainNavigation.css';\r\n\r\nconst mainNavigation = props => (\r\n    <AuthContext.Consumer>\r\n    {(context) => {\r\n        return (\r\n            <header className=\"h-header\">\r\n                <div className=\"o-nav\">\r\n                    <div className=\"o-nav__logo\">\r\n                        <h1>Event Booking</h1>\r\n                    </div>\r\n                    <div className=\"o-nav__items\">\r\n                        <ul>\r\n                            {!context.token &&\r\n                                <li><NavLink to=\"/auth/\">Login</NavLink></li>\r\n                            }\r\n                            <li><NavLink to=\"/events/\">Events</NavLink></li>\r\n                            {context.token && (\r\n                                <React.Fragment>\r\n                                    <li><NavLink to=\"/bookings/\">Bookings</NavLink></li>\r\n                                    <li>\r\n                                        <button onClick={context.logout}>Logout</button>\r\n                                    </li>\r\n                                </React.Fragment>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }}\r\n    </AuthContext.Consumer>\r\n);\r\n\r\nexport default mainNavigation;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport AuthPage from './pages/Auth';\nimport EventPage from './pages/Events';\nimport BookingPage from './pages/Bookings';\nimport MainNavigation from './components/Navigation/MainNavigation';\n\nimport AuthContext from './context/auth-context';\n\nclass App extends Component {\n  \n  state = {\n    token: null,\n    userId: null\n  }\n\n  login = (login) => {\n    this.setState({\n      token: login.token,\n      userId: login.userId\n    })\n  }\n\n  logout = (login) => {\n    this.setState({\n      token: null,\n      userId: null\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <AuthContext.Provider value={{token: this.state.token, userId: this.state.userId, login: this.login, logout: this.logout }}>\n          <MainNavigation />\n          <main className=\"h-main\">\n            <Switch>\n                {this.state.token && <Redirect exact from=\"/\" to=\"/events/\" /> }\n                {this.state.token && <Redirect exact from=\"/auth\" to=\"/events/\" /> }\n                {!this.state.token && <Route path=\"/auth/\" component={AuthPage} /> }\n                <Route path=\"/events/\" component={EventPage} />\n                {this.state.token && <Route path=\"/bookings/\" component={BookingPage} /> }\n                {!this.state.token && <Redirect exact to=\"/auth/\" /> }\n            </Switch>\n          </main>\n        </AuthContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}